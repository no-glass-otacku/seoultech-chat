{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:3000/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport const authService = {\n  async login(email, password) {\n    try {\n      const response = await api.post('/auth/login', {\n        email,\n        password\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response;\n      throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message;\n    }\n  },\n  async register(userData) {\n    try {\n      const response = await api.post('/users', userData);\n      return response.data;\n    } catch (error) {\n      var _error$response2;\n      throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message;\n    }\n  },\n  getCurrentUser() {\n    const userStr = localStorage.getItem('user');\n    return userStr ? JSON.parse(userStr) : null;\n  },\n  isAuthenticated() {\n    return !!localStorage.getItem('token');\n  }\n};","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","headers","authService","login","email","password","response","post","data","error","_error$response","message","register","userData","_error$response2","getCurrentUser","userStr","localStorage","getItem","JSON","parse","isAuthenticated"],"sources":["C:/Users/song/Documents/GitHub/seoultech-chat/client/src/services/authService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:3000/api',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\nexport const authService = {\r\n  async login(email, password) {\r\n    try {\r\n      const response = await api.post('/auth/login', { email, password });\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || error.message;\r\n    }\r\n  },\r\n\r\n  async register(userData) {\r\n    try {\r\n      const response = await api.post('/users', userData);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || error.message;\r\n    }\r\n  },\r\n\r\n  getCurrentUser() {\r\n    const userStr = localStorage.getItem('user');\r\n    return userStr ? JSON.parse(userStr) : null;\r\n  },\r\n\r\n  isAuthenticated() {\r\n    return !!localStorage.getItem('token');\r\n  }\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;EACrEC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,OAAO,MAAMC,WAAW,GAAG;EACzB,MAAMC,KAAKA,CAACC,KAAK,EAAEC,QAAQ,EAAE;IAC3B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMX,GAAG,CAACY,IAAI,CAAC,aAAa,EAAE;QAAEH,KAAK;QAAEC;MAAS,CAAC,CAAC;MACnE,OAAOC,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAC,eAAA;MACd,MAAM,EAAAA,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,uBAAdA,eAAA,CAAgBF,IAAI,KAAIC,KAAK,CAACE,OAAO;IAC7C;EACF,CAAC;EAED,MAAMC,QAAQA,CAACC,QAAQ,EAAE;IACvB,IAAI;MACF,MAAMP,QAAQ,GAAG,MAAMX,GAAG,CAACY,IAAI,CAAC,QAAQ,EAAEM,QAAQ,CAAC;MACnD,OAAOP,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAK,gBAAA;MACd,MAAM,EAAAA,gBAAA,GAAAL,KAAK,CAACH,QAAQ,cAAAQ,gBAAA,uBAAdA,gBAAA,CAAgBN,IAAI,KAAIC,KAAK,CAACE,OAAO;IAC7C;EACF,CAAC;EAEDI,cAAcA,CAAA,EAAG;IACf,MAAMC,OAAO,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC5C,OAAOF,OAAO,GAAGG,IAAI,CAACC,KAAK,CAACJ,OAAO,CAAC,GAAG,IAAI;EAC7C,CAAC;EAEDK,eAAeA,CAAA,EAAG;IAChB,OAAO,CAAC,CAACJ,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EACxC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}